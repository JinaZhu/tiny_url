{"version":3,"sources":["components/Home/styled.js","components/Home/Converted.js","components/Home/ConvertForm.js","components/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["alignCenter","css","HomeContainer","styled","div","FormContainer","form","FormText","p","Input","input","Button","button","ConvertedContainer","UrlContainer","RedirectLink","a","ButtonContainer","Converted","urlData","setisConverted","apiUrl","original_url","converted_url","href","target","onClick","ConvertForm","setUrlInput","convertUrl","onChange","e","value","Home","useState","urlInput","isConverted","undefined","setUrlData","preventDefault","body","url","fetch","method","headers","JSON","stringify","response","json","data","console","log","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAEMA,EAAcC,YAAH,kGAMJC,EAAgBC,IAAOC,IAAV,mGAItBJ,GAGSK,EAAgBF,IAAOG,KAAV,uIAEtBN,GAMSO,EAAWJ,IAAOK,EAAV,6GAMRC,EAAQN,IAAOO,MAAV,yNAYLC,EAASR,IAAOS,OAAV,4SAiBNC,EAAqBV,IAAOC,IAAV,uIAC3BJ,GAOSc,EAAeX,IAAOC,IAAV,uMAWZW,EAAeZ,IAAOa,EAAV,uEAKZC,EAAkBd,IAAOC,IAAV,uFACxBJ,G,OCjDWkB,EAxBG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAC5C,OACE,eAACR,EAAD,WACE,cAACN,EAAD,4BACA,cAACO,EAAD,UACE,4BAAIK,EAAQG,iBAGd,cAACf,EAAD,2BACA,cAACO,EAAD,UACE,4BAAIO,EAASF,EAAQI,kBAEvB,eAACN,EAAD,WACE,cAACN,EAAD,UACE,cAACI,EAAD,CAAcS,KAAMH,EAASF,EAAQI,cAAeE,OAAO,SAA3D,qBAIF,cAACd,EAAD,CAAQe,QAAS,kBAAMN,GAAe,IAAtC,oCCdOO,EAVK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAClC,OACE,eAACxB,EAAD,WACE,cAACE,EAAD,iDACA,cAACE,EAAD,CAAOqB,SAAU,SAACC,GAAD,OAAOH,EAAYG,EAAEN,OAAOO,UAC7C,cAACrB,EAAD,CAAQe,QAASG,EAAjB,0BCHAR,EAGA,iCA8CSY,EA5CF,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACVC,EADU,KACAP,EADA,OAEqBM,oBAAS,GAF9B,mBAEVE,EAFU,KAEGhB,EAFH,OAGac,wBAASG,GAHtB,mBAGVlB,EAHU,KAGDmB,EAHC,iDAKjB,WAA0BP,GAA1B,mBAAAf,EAAA,6DACEe,EAAEQ,iBACIC,EAAO,CACXC,IAAKN,GAHT,kBAM2BO,MAAM,GAAD,OAAIrB,EAAJ,oBAA8B,CACxDsB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBJ,KAAMK,KAAKC,UAAUN,KAX3B,cAMUO,EANV,gBAauBA,EAASC,OAbhC,QAaUC,EAbV,QAca1B,gBACPe,EAAWW,GACX7B,GAAe,IAhBrB,kDAmBI8B,QAAQC,IAAI,QAAZ,MAnBJ,2DALiB,sBA4BjB,OACE,eAACjD,EAAD,YACIkC,GACA,cAAC,EAAD,CAAaP,WA/BF,4CA+B0BD,YAAaA,IAEnDQ,GACC,cAAC,EAAD,CACEjB,QAASA,EACTC,eAAgBA,EAChBC,OAAQA,QCrCH+B,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a2aaabcd.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\n\nconst alignCenter = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const HomeContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: #6c98c6;\n  ${alignCenter}\n`;\n\nexport const FormContainer = styled.form`\n  background-color: white;\n  ${alignCenter};\n  flex-direction: column;\n  padding: 20px;\n  border-radius: 0.25rem;\n`;\n\nexport const FormText = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  font-family: Montserrat, sans-serif;\n`;\n\nexport const Input = styled.input`\n  border-radius: 10px;\n  font-size: 16px;\n  color: #42cf98;\n  font-weight: 500;\n  border: 1px solid #e5e5e5;\n  padding: 16px 10px;\n  height: auto;\n  width: 300px;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  color: #fff;\n  background-color: #28c98b;\n  border: 1px solid #28c98b;\n  font-weight: 700;\n  font-size: 1rem;\n  border-radius: 10px;\n  padding: 15px 30px;\n  margin-top: 15px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    filter: grayscale(60%);\n  }\n`;\n\nexport const ConvertedContainer = styled.div`\n  ${alignCenter};\n  padding: 20px;\n  background-color: white;\n  flex-direction: column;\n  border-radius: 0.25rem;\n`;\n\nexport const UrlContainer = styled.div`\n  border-radius: 10px;\n  font-size: 16px;\n  color: #42cf98;\n  font-weight: 500;\n  border: 1px solid #e5e5e5;\n  padding: 16px 10px;\n  height: auto;\n  width: 400px;\n`;\n\nexport const RedirectLink = styled.a`\n  color: white;\n  text-decoration: none;\n`;\n\nexport const ButtonContainer = styled.div`\n  ${alignCenter};\n  justify-content: space-between;\n  width: 350px;\n`;\n","import React from \"react\";\nimport {\n  FormText,\n  ConvertedContainer,\n  UrlContainer,\n  Button,\n  RedirectLink,\n  ButtonContainer,\n} from \"./styled\";\n\nconst Converted = ({ urlData, setisConverted, apiUrl }) => {\n  return (\n    <ConvertedContainer>\n      <FormText>Your Long URL</FormText>\n      <UrlContainer>\n        <p>{urlData.original_url}</p>\n      </UrlContainer>\n\n      <FormText>Your TiniURL</FormText>\n      <UrlContainer>\n        <p>{apiUrl + urlData.converted_url}</p>\n      </UrlContainer>\n      <ButtonContainer>\n        <Button>\n          <RedirectLink href={apiUrl + urlData.converted_url} target=\"_blank\">\n            Visit\n          </RedirectLink>\n        </Button>\n        <Button onClick={() => setisConverted(false)}>Shorten Another</Button>\n      </ButtonContainer>\n    </ConvertedContainer>\n  );\n};\n\nexport default Converted;\n","import React from \"react\";\n\nimport { FormContainer, FormText, Input, Button } from \"./styled\";\n\nconst ConvertForm = ({ setUrlInput, convertUrl }) => {\n  return (\n    <FormContainer>\n      <FormText>Enter a long URL to make a TiniURL</FormText>\n      <Input onChange={(e) => setUrlInput(e.target.value)} />\n      <Button onClick={convertUrl}>Convert!</Button>\n    </FormContainer>\n  );\n};\n\nexport default ConvertForm;\n","import React, { useState } from \"react\";\n\nimport { HomeContainer } from \"./styled\";\nimport Converted from \"./Converted\";\nimport ConvertForm from \"./ConvertForm\";\n\nconst apiUrl =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://0.0.0.0:8000/\"\n    : \"https://tiniurl.herokuapp.com/\";\n\nconst Home = () => {\n  const [urlInput, setUrlInput] = useState(\"\");\n  const [isConverted, setisConverted] = useState(false);\n  const [urlData, setUrlData] = useState(undefined);\n\n  async function convertUrl(e) {\n    e.preventDefault();\n    const body = {\n      url: urlInput,\n    };\n    try {\n      const response = await fetch(`${apiUrl}/api/convert_url`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n      const data = await response.json();\n      if (data.converted_url) {\n        setUrlData(data);\n        setisConverted(true);\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  return (\n    <HomeContainer>\n      {!isConverted && (\n        <ConvertForm convertUrl={convertUrl} setUrlInput={setUrlInput} />\n      )}\n      {isConverted && (\n        <Converted\n          urlData={urlData}\n          setisConverted={setisConverted}\n          apiUrl={apiUrl}\n        />\n      )}\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}